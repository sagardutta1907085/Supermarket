@page "/categories"
@attribute [Authorize(Policy = "AdminOnly")]

@inject NavigationManager navigationManager
@inject UseCases.UseCaseInterfaces.IViewCategoriesUseCase ViewCategoryUseCase
@inject UseCases.UseCaseInterfaces.IDeleteCategoryUseCase DeleteCategoryUseCase

<h3>Manage Categories</h3>

@if (categories != null)
{
    <table class="table">
        <thead>
            <tr>
                <th>Name</th>
                <th>Description</th>
                <th></th>
            </tr>
        </thead>

        <tbody>
            @foreach (var category in categories)
            {
                <tr>
                    <td>@category.Name</td>
                    <td>@category.Description</td>
                    <td>
                        <button type="button" @onclick="@(() => EditCategory(category))" class="btn btn-link">Edit</button>
                        <button type="button" @onclick="@(() => DeleteCategory(category.CategoryId))" class="btn btn-link">Delete</button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}
<br />
<button type="button" @onclick="OnClickAddCategory" class="btn btn-primary">Add Category</button>

<style>
    body {
        background-image: url('https://media.istockphoto.com/photos/blurry-background-low-angle-canned-foods-aisle-section-at-american-picture-id1048717730?k=6&m=1048717730&s=612x612&w=0&h=vJw6H2PIwF_UjPN2KogQqq0FqEKMmNc1zx6-eQXCcV8=');
        background-repeat: no-repeat;
        background-size: cover;
        padding-top: 40px;
        color:black;
    }

    .container {
        background-color: transparent;
        border-radius: 5px;
        box-shadow: none padding: 40px;
    }

    h1 {
        text-align: center;
    }

    .form-label {
        font-weight: 500;
    }

    .footer {
        display: none;
    }

    #login-submit {
        margin-top: 20px;
    }

    #forgot-password,
    #register-user,
    #resend-confirmation {
        color: #007bff;
        text-decoration: none;
    }
</style>

@code {
    private List<Category> categories;

    protected override void OnInitialized()
    {
        base.OnInitialized();
        LoadCategories();
    }

    private void OnClickAddCategory()
    {
        navigationManager.NavigateTo("/addcategory");
    }

    private void EditCategory(Category category)
    {
        navigationManager.NavigateTo($"/editcategory/{category.CategoryId}");
    }

    private void DeleteCategory(int categoryId)
    {
        DeleteCategoryUseCase.Delete(categoryId);
        LoadCategories();
    }

    private void LoadCategories()
    {
        categories = ViewCategoryUseCase.Execute()?.ToList();
    }
}
